name: Build Japanese LaTeX Resume
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install TeX Live (full)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y texlive-full latexmk

      # ==== 対象ファイルの厳密検出（engine=luatex を含むものを優先）====
      - name: Detect resume directory (must contain engine=luatex)
        id: detect
        shell: bash
        run: |
          set -e
          candidates=()
          # 優先順を明示
          [ -f latex-papers/samizo-aitl-resume/main_resume.tex ] && candidates+=("latex-papers/samizo-aitl-resume")
          [ -f samizo-aitl-resume/main_resume.tex ] && candidates+=("samizo-aitl-resume")
          # それ以外に main_resume.tex があれば追加
          mapfile -t others < <(find . -type f -name main_resume.tex -printf '%h\n' | sort -u)
          for d in "${others[@]}"; do
            [[ " ${candidates[*]} " == *" $d "* ]] || candidates+=("$d")
          done

          if [ ${#candidates[@]} -eq 0 ]; then
            echo "::error::main_resume.tex not found in repository"
            exit 1
          fi

          picked=""
          echo "=== Candidates ==="
          printf ' - %s\n' "${candidates[@]}"

          for d in "${candidates[@]}"; do
            echo "----- HEAD of $d/main_resume.tex -----"
            nl -ba "$d/main_resume.tex" | sed -n '1,30p'
            if grep -Eq '^\s*\\documentclass\[[^]]*engine=luatex' "$d/main_resume.tex"; then
              picked="$d"; break
            fi
          done

          if [ -z "$picked" ]; then
            echo "::error::No candidate main_resume.tex contains 'engine=luatex' in \\documentclass[...]"
            echo "Add: \\documentclass[...,engine=luatex]{bxjsarticle}"
            exit 1
          fi

          echo "Picked: $picked"
          echo "dir=$picked" >> "$GITHUB_OUTPUT"

      - name: Build with latexmk (LuaLaTeX)
        run: |
          set -e
          cd "${{ steps.detect.outputs.dir }}"
          echo "=== Building in $(pwd) ==="
          # 1st pass
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          # 2nd pass (目次/相互参照安定化のため)
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          ls -lh

      - name: Upload PDF artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ steps.detect.outputs.dir }}/main_resume.pdf
          if-no-files-found: error

      - name: Upload logs and intermediates
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex_logs
          path: |
            ${{ steps.detect.outputs.dir }}/*.log
            ${{ steps.detect.outputs.dir }}/*.aux
            ${{ steps.detect.outputs.dir }}/*.fls
            ${{ steps.detect.outputs.dir }}/*.fdb_latexmk
            ${{ steps.detect.outputs.dir }}/*.synctex.gz
            ${{ steps.detect.outputs.dir }}/*.toc
            ${{ steps.detect.outputs.dir }}/*.out
          if-no-files-found: ignore
