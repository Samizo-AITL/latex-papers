name: Build Japanese LaTeX Resume
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install TeX Live (full)
        run: |
          set -euxo pipefail
          sudo apt-get update -qq
          sudo apt-get install -y texlive-full latexmk

      - name: Detect resume directory
        id: detect
        run: |
          set -euo pipefail
          found=$(find . -type f -name "main_resume.tex" | head -n 1)
          if [ -z "$found" ]; then
            echo "::error::main_resume.tex not found anywhere in repo"
            exit 1
          fi
          dir=$(dirname "$found")
          echo "dir=$dir" >> $GITHUB_OUTPUT
          echo "Found main_resume.tex in: $dir"
          nl -ba "$found" | sed -n '1,30p'

      - name: Ensure engine=luatex in \documentclass
        run: |
          set -euo pipefail
          cd "${{ steps.detect.outputs.dir }}"
          # すでに明記されていれば何もしない
          if grep -Eq '^[[:space:]]*\\documentclass\\[[^]]*engine=luatex' main_resume.tex; then
            echo "engine=luatex already present."
          else
            echo "Injecting engine=luatex into \\documentclass..."
            # オプション有り/無しの両方に対応して安全に挿入
            awk '
              /^[[:space:]]*\\documentclass/ && $0 ~ /{bxjsarticle}/ {
                if ($0 ~ /engine=luatex/) { print; next }
                if ($0 ~ /\\documentclass\\[[^]]*\\]/) {
                  sub(/\\documentclass\\[/,"\\documentclass[engine=luatex,"); print; next
                }
                sub(/\\documentclass\{/,"\\documentclass[engine=luatex]{"); print; next
              }
              { print }
            ' main_resume.tex > main_resume.tex.tmp
            mv main_resume.tex.tmp main_resume.tex
          fi
          echo "---- \documentclass line now ----"
          grep -n '^[[:space:]]*\\documentclass' main_resume.tex

      - name: Build with LuaLaTeX (latexmk, twice)
        run: |
          set -euo pipefail
          cd "${{ steps.detect.outputs.dir }}"
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          ls -lh

      - name: Tail log on failure
        if: failure()
        run: |
          DIR="${{ steps.detect.outputs.dir }}"
          echo "==== tail ${DIR}/main_resume.log ===="
          tail -n 200 "${DIR}/main_resume.log" || true

      - name: Upload PDF
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ steps.detect.outputs.dir }}/main_resume.pdf
          if-no-files-found: error

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex_logs
          path: |
            ${{ steps.detect.outputs.dir }}/*.log
            ${{ steps.detect.outputs.dir }}/*.aux
            ${{ steps.detect.outputs.dir }}/*.fls
            ${{ steps.detect.outputs.dir }}/*.fdb_latexmk
            ${{ steps.detect.outputs.dir }}/*.synctex.gz
            ${{ steps.detect.outputs.dir }}/*.toc
            ${{ steps.detect.outputs.dir }}/*.out
          if-no-files-found: ignore
