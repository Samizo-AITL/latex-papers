name: Build Japanese LaTeX Resume
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DIR: latex-papers/samizo-aitl-resume   # ← ここに固定

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install TeX Live (full)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y texlive-full latexmk

      - name: Show target & header
        run: |
          echo "DIR=$DIR"
          test -f "$DIR/main_resume.tex" || { echo "::error file=$DIR/main_resume.tex::not found"; exit 1; }
          echo "=== HEAD ==="
          head -n 30 "$DIR/main_resume.tex"

          # engine=luatex が無ければ即停止（原因を明示）
          grep -q 'engine=luatex' "$DIR/main_resume.tex" || { \
            echo "::error file=$DIR/main_resume.tex,line=2::\\documentclass に engine=luatex がありません"; exit 1; }

      - name: Build with latexmk (LuaLaTeX)
        run: |
          cd "$DIR"
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          # 参照更新のためもう一回（必要なら）
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          ls -lh

      - name: Show log tail on failure
        if: failure()
        run: |
          echo "==== HEAD of $DIR/main_resume.tex ===="
          head -n 30 "$DIR/main_resume.tex" || true
          echo "==== tail $DIR/main_resume.log ===="
          tail -n 200 "$DIR/main_resume.log" || true

      - name: Upload PDF artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ env.DIR }}/main_resume.pdf
          if-no-files-found: error

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex_logs
          path: |
            ${{ env.DIR }}/*.log
            ${{ env.DIR }}/*.aux
            ${{ env.DIR }}/*.fls
            ${{ env.DIR }}/*.fdb_latexmk
            ${{ env.DIR }}/*.synctex.gz
            ${{ env.DIR }}/*.toc
            ${{ env.DIR }}/*.out
          if-no-files-found: ignore
