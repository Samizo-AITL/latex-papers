name: Build Japanese LaTeX Resume
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install TeX Live (full)
        run: |
          set -euxo pipefail
          sudo apt-get update -qq
          sudo apt-get install -y texlive-full latexmk

      - name: Detect main_resume.tex
        id: detect
        shell: bash
        run: |
          set -euxo pipefail
          mapfile -t files < <(find . -type f -name 'main_resume.tex' | sort)
          if [ ${#files[@]} -eq 0 ]; then
            echo "::error::main_resume.tex not found"; exit 1
          fi
          picked=""
          for pref in "latex-papers/samizo-aitl-resume/main_resume.tex" "samizo-aitl-resume/main_resume.tex"; do
            for f in "${files[@]}"; do
              if [ "$f" = "./$pref" ]; then picked="$f"; break 2; fi
            done
          done
          picked="${picked:-${files[0]}}"
          dir="$(dirname "$picked")"
          echo "picked=$picked" >> "$GITHUB_OUTPUT"
          echo "dir=$dir"       >> "$GITHUB_OUTPUT"
          echo "---- HEAD of $picked ----"
          nl -ba "$picked" | sed -n '1,40p'

      - name: Create wrapper (force engine=luatex)
        run: |
          set -euxo pipefail
          DIR="${{ steps.detect.outputs.dir }}"
          cat > "$DIR/build_wrapper.tex" <<'EOF'
\RequirePackage{iftex}
\ifluatex\else\errmessage{Use LuaLaTeX (run: lualatex).}\fi
\PassOptionsToClass{engine=luatex}{bxjsarticle}
\input{main_resume.tex}
EOF
          echo "---- wrapper ----"
          cat "$DIR/build_wrapper.tex"

      - name: Build with LuaLaTeX
        run: |
          set -euxo pipefail
          DIR="${{ steps.detect.outputs.dir }}"
          cd "$DIR"
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode -jobname=main_resume build_wrapper.tex
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode -jobname=main_resume build_wrapper.tex
          ls -lh

      - name: Tail log on failure
        if: failure()
        run: |
          DIR="${{ steps.detect.outputs.dir }}"
          echo "==== tail ${DIR}/main_resume.log ===="
          tail -n 200 "${DIR}/main_resume.log" || true

      - name: Upload PDF
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ steps.detect.outputs.dir }}/main_resume.pdf
          if-no-files-found: error

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex_logs
          path: |
            ${{ steps.detect.outputs.dir }}/*.log
            ${{ steps.detect.outputs.dir }}/*.aux
            ${{ steps.detect.outputs.dir }}/*.fls
            ${{ steps.detect.outputs.dir }}/*.fdb_latexmk
            ${{ steps.detect.outputs.dir }}/*.synctex.gz
            ${{ steps.detect.outputs.dir }}/*.toc
            ${{ steps.detect.outputs.dir }}/*.out
          if-no-files-found: ignore
