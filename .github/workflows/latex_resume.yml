name: Build Japanese LaTeX Resume
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install TeX Live (full)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y texlive-full latexmk

      - name: Locate main_resume.tex and inject engine=luatex if missing
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          mapfile -t files < <(find . -type f -name 'main_resume.tex' | sort)
          if [ ${#files[@]} -eq 0 ]; then
            echo "::error::main_resume.tex not found"; exit 1
          fi
          # 先に既知パスを優先
          for pref in "latex-papers/samizo-aitl-resume/main_resume.tex" "samizo-aitl-resume/main_resume.tex"; do
            for f in "${files[@]}"; do
              if [ "$f" = "./$pref" ]; then picked="$f"; break 2; fi
            done
          done
          # 無ければ最初の候補
          picked="${picked:-${files[0]}}"
          echo "picked=$picked" >> "$GITHUB_OUTPUT"

          echo "----- HEAD of $picked -----"
          nl -ba "$picked" | sed -n '1,30p'

          # engine=luatex が無いなら注入（\documentclass[...] の先頭へ）
          if ! grep -Eq '^\s*\\documentclass\[[^]]*engine=luatex' "$picked"; then
            echo "Injecting engine=luatex into $picked"
            sed -i -E '0,/^\\documentclass\\[/{s/^\\(\\documentclass\\)\\[([^]]*)\\]/\\1[engine=luatex,\\2]/}' "$picked"
          fi

          echo "----- HEAD after possible injection -----"
          nl -ba "$picked" | sed -n '1,30p'
          grep -Eq '^\s*\\documentclass\[[^]]*engine=luatex' "$picked" || { echo "::error::engine injection failed"; exit 1; }

      - name: Build with LuaLaTeX (twice)
        run: |
          set -e
          TEX="${{ steps.detect.outputs.picked }}"
          DIR="$(dirname "$TEX")"
          cd "$DIR"
          echo "Compiling in: $DIR"
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          ls -lh

      - name: Upload PDF
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ steps.detect.outputs.picked }}/../main_resume.pdf
          if-no-files-found: error

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex_logs
          path: |
            ${{ steps.detect.outputs.picked }}/../*.log
            ${{ steps.detect.outputs.picked }}/../*.aux
            ${{ steps.detect.outputs.picked }}/../*.fls
            ${{ steps.detect.outputs.picked }}/../*.fdb_latexmk
            ${{ steps.detect.outputs.picked }}/../*.synctex.gz
            ${{ steps.detect.outputs.picked }}/../*.toc
            ${{ steps.detect.outputs.picked }}/../*.out
          if-no-files-found: ignore
