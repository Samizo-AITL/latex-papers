name: Build Japanese LaTeX Resume
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install TeX Live (full)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y texlive-full latexmk

      - name: Detect resume (prefer latex-papers/samizo-aitl-resume, then samizo-aitl-resume)
        id: detect
        shell: bash
        run: |
          set -e
          candidates=()
          [ -f latex-papers/samizo-aitl-resume/main_resume.tex ] && candidates+=("latex-papers/samizo-aitl-resume")
          [ -f samizo-aitl-resume/main_resume.tex ] && candidates+=("samizo-aitl-resume")
          mapfile -t others < <(find . -type f -name main_resume.tex -printf '%h\n' | sort -u)
          for d in "${others[@]}"; do
            [[ " ${candidates[*]} " == *" $d "* ]] || candidates+=("$d")
          done
          [ ${#candidates[@]} -gt 0 ] || { echo "::error::main_resume.tex not found"; exit 1; }

          picked=""
          for d in "${candidates[@]}"; do
            echo "----- HEAD of $d/main_resume.tex -----"
            nl -ba "$d/main_resume.tex" | sed -n '1,30p'
            if grep -Eq '^\s*\\documentclass\[[^]]*engine=luatex' "$d/main_resume.tex"; then
              picked="$d"; break
            fi
          done

          if [ -z "$picked" ]; then
            d="${candidates[0]}"
            echo "No engine=luatex found. Injecting into $d/main_resume.tex"
            sed -i -E '0,/^\\documentclass\\[/{s/^\\(\\documentclass\\)\\[([^]]*)\\]/\\1[engine=luatex,\\2]/}' "$d/main_resume.tex"
            nl -ba "$d/main_resume.tex" | sed -n '1,30p'
            grep -Eq '^\s*\\documentclass\[[^]]*engine=luatex' "$d/main_resume.tex" || { echo "::error::failed to inject"; exit 1; }
            picked="$d"
          fi

          echo "dir=$picked" >> "$GITHUB_OUTPUT"
          echo "Picked: $picked"

      - name: Build with LuaLaTeX (twice)
        run: |
          set -e
          cd "${{ steps.detect.outputs.dir }}"
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          latexmk -lualatex -halt-on-error -file-line-error -interaction=nonstopmode main_resume.tex
          ls -lh

      - name: Upload PDF
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ steps.detect.outputs.dir }}/main_resume.pdf
          if-no-files-found: error

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex_logs
          path: |
            ${{ steps.detect.outputs.dir }}/*.log
            ${{ steps.detect.outputs.dir }}/*.aux
            ${{ steps.detect.outputs.dir }}/*.fls
            ${{ steps.detect.outputs.dir }}/*.fdb_latexmk
            ${{ steps.detect.outputs.dir }}/*.synctex.gz
            ${{ steps.detect.outputs.dir }}/*.toc
            ${{ steps.detect.outputs.dir }}/*.out
          if-no-files-found: ignore
